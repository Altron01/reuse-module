on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
        
      azure_keyvault_url:
        required: true
        type: string
        
      source_azure_resource_group:
        required: true
        type: string
      source_azure_datafactory_name:
        required: true
        type: string
        
      target_azure_resource_group:
        required: true
        type: string
      target_azure_datafactory_name:
        required: true
        type: string
    secrets:
      personal_access_token:
        required: true
      azure_client_id:
        required: true
      azure_tenant_id:
        required: true
      azure_subscription_id:
        required: true
        
      source_azure_subscription_id:
        required: true
        
      target_azure_subscription_id:
        required: true
    
jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: '${{ inputs.ref }}'
          token: '${{ secrets.personal_access_token }}'
      - uses: actions/checkout@v4
        with:
          path: 'template'
          repository: Altron01/reuse-module
          ref: main
          token: '${{ secrets.personal_access_token }}'
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13' 
      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.azure_client_id }}
          tenant-id: ${{ secrets.azure_tenant_id }}
          subscription-id: ${{ secrets.azure_subscription_id }}
          enable-AzPSSession: true
      - run: |
          pip install azure-keyvault-secrets azure-identity
          export VAULT_URL='${{ inputs.azure_keyvault_url }}'
          python template/.github/scripts/replace_envvar.py
      - name: Setup Node.js environment
        uses: actions/setup-node@v4.2.0
        with:
          node-version: 18.x
      - name: Install ADF Utilities packages
        run: |
          npm install
      - name: Validate
        run: npm run build validate ${{github.workspace}}/factoryData /subscriptions/${{ secrets.source_azure_subscription_id }}/resourceGroups/${{ inputs.source_azure_resource_group }}/providers/Microsoft.DataFactory/factories/${{ inputs.source_azure_datafactory_name }}
      - name: Validate and Generate ARM template
        run: npm run build export ${{github.workspace}}/factoryData /subscriptions/${{ secrets.source_azure_subscription_id }}/resourceGroups/${{ inputs.source_azure_resource_group }}/providers/Microsoft.DataFactory/factories/${{ inputs.source_azure_datafactory_name }} build "ExportedArmTemplate"
      - run: ls ${{github.workspace}}/build
      #- name: Download a single artifact
      #  uses: actions/download-artifact@v4
      #  with:
      #    name: my-artifact # In order to leverage the artifact in another job, we need to upload it with the upload action
      #- name: upload artifact
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: ExportedArmTemplate # (4) use the same artifact name you used in the previous export step
      #    path: ${{github.workspace}}/ADFroot/build/ExportedArmTemplate
      - name: Deploy resources
        uses: Azure/data-factory-deploy-action@v1.2.0
        with:
          resourceGroupName: ${{ inputs.target_azure_resource_group }}
          dataFactoryName: ${{ inputs.target_azure_datafactory_name }}
          armTemplateFile: ${{github.workspace}}/build/ARMTemplateForFactory.json
          armTemplateParametersFile: ${{github.workspace}}/build/ARMTemplateParametersForFactory.json
          # additionalParameters: 'key1=value key2=value keyN=value' [optional]
          # skipAzModuleInstallation: true [optional]
